import sys, os
sys.path.insert(0, os.path.abspath('..'))
import src.sequence as sequence
from io import StringIO


class Capturing(list):
    def __enter__(self):
        self._stdout = sys.stdout
        sys.stdout = self._stringio = StringIO()
        return self

    def __exit__(self, *args):
        self.extend(self._stringio.getvalue().splitlines())
        del self._stringio  # free up some memory
        sys.stdout = self._stdout

def test_start_sequence():
    with Capturing() as output:
        s = sequence.Sequencer()
        start = s.sequence(mode='test', test_type='start')
        out = output
    assert 'This is your personal vulnerability' in output[0]
    assert '-----' in output[1]


def test_cve_sequence():
    with Capturing() as output:
        s = sequence.Sequencer()
        cve = s.sequence(mode='test', test_type='cve_error', type='cve')
        out = output
    assert 'You entered the CVE area.' in output[0]
    assert '-----' in output[1]


def test_error_sequence():
    with Capturing() as output:
        s = sequence.Sequencer()
        error_input = 'testfalseinput'
        cve = s.sequence(mode='test', test_type='cve_error', type='cve_error')
        out = output
    assert 'Invalid input' in output[0]


test_error_sequence()